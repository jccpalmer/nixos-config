{ lib, config, options, ... }:

let
  cfg = config.steam;
  pkgs = config.pkgs;
in
{
  options.steam = {
    enable = lib.mkEnableOption "Enable Steam in NixOS";
    enableNative = lib.mkOption {
      type = lib.types.bool;
      default = true;
    };
    enableSteamBeta = lib.mkOption {
      type = lib.types.bool;
      default = true;
    };
    fixDownloadSpeed = lib.mkOption {
      type = lib.types.bool;
      default = true;
    };
    username = lib.mkOption {
      type = lib.types.str;
      description = "Username for Home Manager user config.";
    };
  };

  config = lib.mkIf cfg.enable {
    programs.java.enable = true;

    programs.steam = {
      enable = cfg.enableNative;
      dedicatedServer.openFirewall = true;
      extraCompatPackages = with pkgs; [
        luxtorpeda
        proton-ge-bin
      ];
      gamescopeSession.enable = true;
      localNetworkGameTransfers.openFirewall = true;
      package = pkgs.steam.override {
        extraBwrapArgs = [ "--unsetenv TZ" ];
        extraLibraries = pkgs: with pkgs; [
          alsa-lib
          libGL
          SDL
          SDL_image
          SDL_mixer
          SDL_ttf
          SDL2
          SDL2_image
          SDL2_mixer
          SDL2_ttf
          xorg.libX11
          xorg.libxcb
          xorg.libXcursor
          xorg.libXi
          xorg.libXinerama
          xorg.libXext
          xorg.libXrandr
          xorg.libXrender
          xorg.libXScrnSaver
          libpng
          libpulseaudio
          libvorbis
          stdenv.cc.cc.lib
          libkrb5
          keyutils
        ];
        extraPkgs = pkgs: with pkgs; [
          bibata-cursors
        ];
      };
      protontricks.enable = true;
      remotePlay.openFirewall = true;
    };

    home-manager.users.${cfg.username} = { pkgs, config, ... }: {
      home = {
        file = {
          steam-beta = lib.mkIf cfg.enableSteamBeta {
            text = "publicbeta";
            target = "${config.xdg.dataHome}/Steam/package/beta";
          };
          steam-slow-fix = lib.mkIf cfg.fixDownloadSpeed {
            text = ''
              @nClientDownloadEnableHTTP2PlatformLinux 0
              @fDownloadRateImprovementToAddAnotherConnection 1.0
            '';
            target = "${config.xdg.dataHome}/Steam/steam_dev.cfg";
          };
        };

        packages = with pkgs; [
          # SteamTinkerLaunch tools
          steamtinkerlaunch
          gawk
          procps
          unixtools.xxd
          xdotool
          xorg.xprop
          xorg.xrandr
          xorg.xwininfo
          yad
        ];
      };
    };
  };
}

